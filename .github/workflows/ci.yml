name: CI

on:
  push:

jobs:
  test-service:
    runs-on: ubuntu-latest
    env:
      RUST_TOOLCHAIN: stable

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          components: clippy

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: cargo-registry-${{ runner.os }}-${{ hashFiles('service/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: cargo-index-${{ runner.os }}-${{ hashFiles('service/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: service/target
          key: cargo-build-target-${{ runner.os }}-${{ hashFiles('service/Cargo.lock') }}

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path service/Cargo.toml

      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          args: --manifest-path service/Cargo.toml --lib --tests --all-features -- -D clippy::all -D clippy::pedantic -D clippy::nursery -A clippy::module_name_repetitions -A clippy::future-not-send

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path service/Cargo.toml

  build-service-container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Get the git tag
        run: |
          echo GIT_TAG=$(echo ${GITHUB_REF} | sed -e "s/refs\/.*\///g") >> $GITHUB_ENV

      - uses: whoan/docker-build-with-cache-action@v5
        with:
          registry: docker.pkg.github.com
          username: "publisher"
          password: "${{ secrets.GITHUB_TOKEN }}"
          image_name: "${{ format('{0}/nrl-service', github.repository) }}"
          image_tag: "${{ env.GIT_TAG }}"
          push_git_tag: true
          context: service

  e2e:
    runs-on: ubuntu-latest
    needs:
      - test-service
      - build-service-container
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get the git tag
        run: |
          echo GIT_TAG=$(echo ${GITHUB_REF} | sed -e "s/refs\/.*\///g") >> $GITHUB_ENV

      - name: Docker login
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN

      - name: Pull Service Container
        run: |
          docker pull docker.pkg.github.com/${{ format('{0}/nrl-service', github.repository) }}:${{ env.GIT_TAG }}
          docker tag docker.pkg.github.com/${{ format('{0}/nrl-service', github.repository) }}:${{ env.GIT_TAG }} nrl-service:latest

      - name: Start Services
        working-directory: e2e
        run: docker-compose up -d

      - name: Service Logs
        if: always()
        working-directory: e2e
        run: docker-compose logs service

  deploy-service-container:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs:
      - e2e
    steps:
      - name: Get the git tag
        run: |
          echo GIT_TAG=$(echo ${GITHUB_REF} | sed -e "s/refs\/.*\///g") >> $GITHUB_ENV

      - name: Login to Heroku Container registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login

      - name: Docker login
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN

      - name: Push container
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          docker pull docker.pkg.github.com/${{ format('{0}/nrl-service', github.repository) }}:${{ env.GIT_TAG }}
          docker tag docker.pkg.github.com/${{ format('{0}/nrl-service', github.repository) }}:${{ env.GIT_TAG }} registry.heroku.com/nrl-cd/web
          docker push registry.heroku.com/nrl-cd/web

      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a nrl-cd web
